//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegScoreCalc.SVMProcessDBService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVMProcessDBService.ISVMService", CallbackContract=typeof(RegScoreCalc.SVMProcessDBService.ISVMServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISVMService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISVMService/StartProcess")]
        void StartProcess(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVMService/Finished", ReplyAction="http://tempuri.org/ISVMService/FinishedResponse")]
        bool Finished(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVMService/Reconnect", ReplyAction="http://tempuri.org/ISVMService/ReconnectResponse")]
        bool Reconnect(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISVMService/Disconnect", ReplyAction="http://tempuri.org/ISVMService/DisconnectResponse")]
        void Disconnect(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISVMServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISVMService/ProcessFinished")]
        void ProcessFinished(string processName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISVMService/NotifyClient")]
        void NotifyClient(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISVMServiceChannel : RegScoreCalc.SVMProcessDBService.ISVMService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SVMServiceClient : System.ServiceModel.DuplexClientBase<RegScoreCalc.SVMProcessDBService.ISVMService>, RegScoreCalc.SVMProcessDBService.ISVMService {
        
        public SVMServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SVMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SVMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SVMServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SVMServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void StartProcess(string name) {
            base.Channel.StartProcess(name);
        }
        
        public bool Finished(string name) {
            return base.Channel.Finished(name);
        }
        
        public bool Reconnect(string name) {
            return base.Channel.Reconnect(name);
        }
        
        public void Disconnect(string name) {
            base.Channel.Disconnect(name);
        }
    }
}
